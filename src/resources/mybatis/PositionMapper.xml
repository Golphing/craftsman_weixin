<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.craftsmanasia.dao.PositionDao">
	
    <resultMap id="companyResult" type="Company"
		extends="com.craftsmanasia.dao.CompanyDao">
	</resultMap>
    
    <resultMap 
		id="positionResult" 
		type="Position" >
		
		<id property="id" column="position_id" />
		
		<result property="title" column="position_title" />
		<result property="createTime" column="position_create_time" />
		<result property="updateTime" column="position_update_time" />		
		<result property="wage" column="position_wage" />
        <result property="requirement" column="position_requirement" />
        <result property="city" column="position_city" />
        <result property="weight" column="position_weight" />
        <result property="companyId" column="position_company_id" />
        <result property="isExpired" column="position_is_expired" />
        
        <association property="company"
			javaType="Company" resultMap="companyResult" />
	</resultMap>
    
    <sql id="positionColumns"> 
		position.id AS position_title,
		position.name AS position_name,
		position.create_time AS position_create_time,
		position.update_time AS position_update_time,
		position.wage AS position_wage,
		position.requirement AS position_requirement,
		position.city AS position_city,
		position.companyId AS position_company_id,
		company.weight AS company_weight,
		company.is_expired AS company_is_expired
	</sql>
	
	<insert
	    id="addPosition" 
	    useGeneratedKeys="true" 
	    keyProperty="id" 
	    parameterType="Position"> 
	    
		INSERT INTO position(
		title,
		create_time,
		update_time,
		wage,
		requirement,
		city,
		weight,
		companyId,
		is_expired
		) VALUES (
		#{title, javaType=string, jdbcType=CHAR},
		#{createTime, javaType=date, jdbcType=TIMESTAMP},
		#{updateTime, javaType=date, jdbcType=TIMESTAMP},
		#{wage, javaType=string, jdbcType=CHAR},
		#{requirement, javaType=string, jdbcType=CHAR},
		#{city, javaType=string, jdbcType=CHAR},
		#{weight, javaType=int, jdbcType=INTEGER},
		#{companyId, javaType=int, jdbcType=INTEGER},
		#{isExpired, javaType=int, jdbcType=INTEGER}
		)
	</insert>
	
	<update id="updatePosition" parameterType="Position">

		UPDATE
			position
		<set>
			<if test="title != null">
				title = #{title, javaType=string, jdbcType=CHAR},
            </if>
			<if test="wage != null">
				wage = #{wage, javaType=string, jdbcType=CHAR},
            </if>
			<if test="weight != null">
				weight = #{weight, javaType=int, jdbcType=INTEGER},
            </if>
            <if test="requirement != null">
				requirement = #{requirement, javaType=string, jdbcType=CHAR},
            </if>
			<if test="updateTime != null">
				update_time = #{updateTime, javaType=date, jdbcType=TIMESTAMP},
            </if>
            <if test="city != null">
				city = #{city, javaType=string, jdbcType=CHAR},
            </if>
            <if test="companyId != null">
				company_id = #{companyId, javaType=int, jdbcType=INTEGER},
            </if>
            <if test="isExpired != null">
				is_expired = #{isExpired, javaType=int, jdbcType=INTEGER},
            </if>
		</set>
		WHERE
			id = #{id, javaType=int, jdbcType=INTEGER}
	</update>
	
	<select 
		id="getPositionById"
		parameterType="map" 
		resultMap="positionResult" >
            
		SELECT
			<include refid="companyColumns"/>,
			<include refid="positionColumns"/>
		FROM
			position
		WHERE
			position.id = #{id, javaType=int, jdbcType=INTEGER}
			AND position.is_expired = 1
		ORDER BY
			position.weight ASC,
			position.title ASC
	</select>
	
	<select 
		id="getPositionsByCompanyId"
		parameterType="map" 
		resultMap="positionResult" >
            
		SELECT
			<include refid="companyColumns"/>,
			<include refid="positionColumns"/>
		FROM
			position
			INNER JOIN company ON company.id = position.company_id
		WHERE
			position.company_id = companyId
			AND company.is_expired = 1
			AND position.is_expired = 1
		ORDER BY
			position.weight ASC,
			company.weight ASC	
	</select>
	
	<select 
		id="getPositionsByCompanyNameAndPositionName"
		parameterType="map" 
		resultMap="positionResult" >
            
		SELECT
			<include refid="companyColumns"/>,
			<include refid="positionColumns"/>
		FROM
			position
			INNER JOIN company ON company.id = position.company_id
		WHERE
		<if test="positionTitle != null">
			position.tile = #{positionTitle, javaType=string, jdbcType=CHAR}
		</if>
		<if test="companyName != null">
			AND company.name = #{companyName, javaType=string, jdbcType=CHAR}
		</if>
		ORDER BY
			company.weight ASC,
			position.weight ASC,
			company.name ASC,
			position.title ASC	
	</select>
	
	<select id="count1" resultType="int">
		select count(*) from user
	</select>
</mapper>